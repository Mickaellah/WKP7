{"version":3,"sources":["script.js"],"names":["books","title","author","genre","pages","status","console","log","form","document","querySelector","table","tableBody","addBttn","loadBookList","html","map","book","join","insertAdjacentHTML","handleClick","event","target","matches","value","innerHTML","reset","addEventListener","window","e","deleteBtn"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["// A big array that contains some objects that I need to start this project.\r\nconst books = [\r\n    {\r\n        title: 'Harry Potter',\r\n        author: 'JK Rowling',\r\n        genre: 'Fantasy',\r\n        pages: 323,\r\n        status: true,\r\n    },\r\n\r\n    {\r\n        title: 'Clean Code',\r\n        author: 'Robert C. Martin',\r\n        genre: 'IT',\r\n        pages: 434,\r\n        status: false,\r\n    },\r\n\r\n    {\r\n        title: 'Refactoring UI',\r\n        author: 'Adam Wathan',\r\n        genre: 'Design',\r\n        pages: 200,\r\n        status: true,\r\n    },\r\n\r\n    {\r\n        title: 'Pachinko',\r\n        author: 'Min Jin Lee',\r\n        genre: 'Fiction',\r\n        pages: 496,\r\n        status: true,\r\n    }\r\n];\r\n\r\nconsole.log(books);\r\n\r\n\r\n\r\n// Grab the elements that might be needed in this project.\r\nconst form = document.querySelector('form');\r\nconst table = document.querySelector('.container');\r\nconst tableBody = document.querySelector('.tbody');\r\nconst addBttn = document.querySelector('.add_button');\r\n\r\n// Generate the books objects into html elements.\r\nfunction loadBookList() {\r\n    const html = books.map(book => \r\n        `\r\n        <tr class=\"table-row\">\r\n            <td>${book.title}</td>\r\n            <td>${book.author}</td>\r\n            <td>${book.genre}</td>\r\n            <td>${book.pages}</td>\r\n            <td>${book.status}</td>\r\n            <td>\r\n                <button class=\"delete_button\" type=\"button\">Delete</button>\r\n            </td>\r\n        </tr>\r\n        `).join(' ');\r\n    tableBody.insertAdjacentHTML(\"beforeend\", html);\r\n};\r\nloadBookList();\r\n\r\n\r\n// A function for the handling the add button in the form.\r\nconst handleClick = (event) => {\r\n    // console.log(event.target);\r\n    if (event.target.matches('form')) {\r\n        const form = event.target;\r\n        const title = form.title.value;\r\n        const author = form.author.value;\r\n        const genre = form.genre.value;\r\n        const pages = form.pages.value;\r\n        const status = form.status.value;\r\n\r\n        const html = `\r\n        <tr>\r\n            <td>${title}</td>\r\n            <td>${author}</td>\r\n            <td>${genre}</td>\r\n            <td>${pages}</td>\r\n            <td>${status}</td>\r\n            <td>\r\n                <button class=\"delete_button\" type=\"button\">Delete</button>\r\n            </td>\r\n        </tr>\r\n        `;\r\n        tableBody.innerHTML = html;\r\n    }\r\n    form.reset();\r\n}\r\n\r\n\r\n// An event listener for the add button to push the form in the table under.\r\naddBttn.addEventListener('click', handleClick);\r\n\r\n\r\nwindow.addEventListener('click', (e) => {\r\n    const deleteBtn = e.target.matches('button.delete_button');\r\n    console.log(deleteBtn);\r\n\r\n})\r\n\r\n\r\n"]}