{"version":3,"sources":["script.js"],"names":["books","title","author","genre","pages","status","console","log","form","document","querySelector","table","tableBody","addBttn","loadBookList","html","map","book","join","insertAdjacentHTML","items","handleSubmit","event","preventDefault","target","value","item","push","dispatchEvent","CustomEvent","reset","addEventListener"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["// A big array that contains some objects that I need to start this project.\r\nconst books = [\r\n    {\r\n        title: 'Harry Potter',\r\n        author: 'JK Rowling',\r\n        genre: 'Fantasy',\r\n        pages: 323,\r\n        status: true,\r\n    },\r\n\r\n    {\r\n        title: 'Clean Code',\r\n        author: 'Robert C. Martin',\r\n        genre: 'IT',\r\n        pages: 434,\r\n        status: false,\r\n    },\r\n\r\n    {\r\n        title: 'Refactoring UI',\r\n        author: 'Adam Wathan',\r\n        genre: 'Design',\r\n        pages: 200,\r\n        status: true,\r\n    },\r\n\r\n    {\r\n        title: 'Pachinko',\r\n        author: 'Min Jin Lee',\r\n        genre: 'Fiction',\r\n        pages: 496,\r\n        status: true,\r\n    }\r\n];\r\n\r\nconsole.log(books);\r\n\r\n\r\n\r\n// Grab the elements that might be needed in this project.\r\nconst form = document.querySelector('form');\r\nconst table = document.querySelector('.container');\r\nconst tableBody = document.querySelector('.tbody');\r\nconst addBttn = document.querySelector('.add_button');\r\n\r\n// Generate the books objects into html elements.\r\nfunction loadBookList() {\r\n    const html = books.map(book => \r\n        `\r\n        <tr class=\"table-row\">\r\n            <td>${book.title}</td>\r\n            <td>${book.author}</td>\r\n            <td>${book.genre}</td>\r\n            <td>${book.pages}</td>\r\n            <td><input type=\"checkbox\" class=\"checkbox\"></td>\r\n            <td>\r\n                <button class=\"delete-button\">\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M15.5 4L14.5 3H9.5L8.5 4H5V6H19V4H15.5ZM6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM8 9H16V19H8V9Z\" fill=\"#747474\"/>\r\n                    </svg>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        `).join(' ');\r\n    tableBody.insertAdjacentHTML(\"beforeend\", html);\r\n};\r\nloadBookList();\r\n\r\n\r\n// A function for the handling the add button in the form.\r\nconst items = [];\r\nconst handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const form = event.target;\r\n        const title = form.title.value;\r\n        const author = form.author.value;\r\n        const genre = form.genre.value;\r\n        const pages = form.pages.value;\r\n        const status = form.status.value;\r\n        console.log(author);\r\n\r\n        const item = {\r\n            title: title,\r\n            author: author,\r\n            genre: genre,\r\n            pages: pages,\r\n            status: status,\r\n        };\r\n        items.push(item);\r\n        tableBody.dispatchEvent(new CustomEvent('addItem'));\r\n\r\n        const html = items.map(item => `\r\n        <tr>\r\n            <td>${item.title}</td>\r\n            <td>${item.author}</td>\r\n            <td>${item.genre}</td>\r\n            <td>${item.pages}</td>\r\n            <td><input type=\"checkbox\" class=\"checkbox\"></td>\r\n            <td>\r\n                <button class=\"delete-button\">\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M15.5 4L14.5 3H9.5L8.5 4H5V6H19V4H15.5ZM6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM8 9H16V19H8V9Z\" fill=\"#747474\"/>\r\n                    </svg>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        `);\r\n        tableBody.insertAdjacentHTML(\"beforeend\", html);\r\n        form.reset();\r\n    };\r\n\r\n\r\n// An event listener for the add button to push the form in the table under.\r\nform.addEventListener('submit', handleSubmit);\r\ntableBody.dispatchEvent(new CustomEvent('addItem'));\r\n\r\n\r\n// window.addEventListener('click', (e) => {\r\n//     const deleteBtn = e.target.matches('button.delete_button');\r\n//     console.log(deleteBtn);\r\n\r\n// })\r\n\r\n// let items = [];\r\n\r\n// const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const name = e.currentTarget.item.value;\r\n//     const item = {\r\n//         name,\r\n//         id: Date.now(),\r\n//         read: false\r\n//     };\r\n//     items.push(item);\r\n//     tableBody.dispatchEvent(new CustomEvent('addItem'));\r\n// };\r\n\r\n// const deleteItems = id => {\r\n//     items = items.filter(item => item.id !== id);\r\n//     tableBody.dispatchEvent(new customElements('addItem'));\r\n// };\r\n\r\n// const markAsRead = id => {\r\n//     const itemRef = items.find(item => item.id === id);\r\n//     itemRef.read = !itemRef.read;\r\n//     tableBody.dispatchEvent(new customElements('addItem'));\r\n// };\r\n\r\n// tableBody.addEventListener('click', function(e) {\r\n//     const id = Number(e.target.value);\r\n//     if (e.target.matches('button.delete-button')) {\r\n//         deleteItems(id);\r\n//     }\r\n//     if (e.target.matches('input[type=\"checkbox\"')) {\r\n//         markAsRead(id);\r\n//     }\r\n// });\r\n\r\n"]}